apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-reverse-proxy
  namespace: reverse-proxy
  labels:
    app.kubernetes.io/name: nginx-reverse-proxy
    app.kubernetes.io/part-of: practice
    app.kubernetes.io/created-by: majid-roudi
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx-reverse-proxy
      app.kubernetes.io/part-of: practice
      app.kubernetes.io/created-by: majid-roudi
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx-reverse-proxy
        app.kubernetes.io/part-of: practice
        app.kubernetes.io/created-by: majid-roudi
    spec:
      containers:
      - name: nginx
        image: majidroodi/nginx:1-24-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        - containerPort: 443
        resources:
          requests:
            cpu: "500m"
            memory: "256Mi"
          limits:
            cpu: "1000m"
            memory: "1024Mi"
        readinessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 3
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
          - name: default-config
            mountPath: /etc/nginx/conf.d
#            subPath: default.conf
          - name: nginx-tls
            mountPath: /etc/nginx/ssl
            readOnly: true
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-proxy-config
            items:
              - key: nginx.conf
                path: nginx.conf

        - name: default-config
          configMap:
            name: default-config
            items:
              - key: default.conf
                path: default.conf
        - name: nginx-tls
          secret:
            secretName: nginx-tls
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key


